name: deploy main

# Trigger the workflow on push events to the master branch.
on: 
  push:
    branches:
      - ci-testing
    # paths:
    #   - 'server/**'

# Define jobs to be run.
jobs:
  build:
    # Only run this job if the event is not from a draft pull request.
    if: "!github.event.pull_request.draft"
    # Specify the type of runner that the job will run on.
    runs-on: ubuntu-latest

    # Define the steps of the job.
    steps:
    - name: Checkout codebase
      uses: actions/checkout@v3

    - name: Setup nodejs
      uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - name: Cache build output
      uses: actions/cache@v3
      with:
        path: server
        key: cache-${{ github.run_id }}-${{ github.run_attempt }}-${{ github.sha }}-server

    - name: Install NPM dependencies
      run: npm ci
      working-directory: server

  deploy:
    if: "! github.event.pull_request.draft"
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: restore server cache
        id: cache-dist-restore
        uses: actions/cache/restore@v3
        with:
          path: server
          key: cache-${{ github.run_id }}-${{ github.run_attempt }}-${{ github.sha }}-server
      - name: deploy-to-ec2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_DEV_CERTIFICATE }}
          HOSTNAME: ${{ vars.EC2_DEV_HOSTNAME }}
          USERNAME: ${{ vars.EC2_DEV_USERNAME }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USERNAME}@${HOSTNAME} "rm -rf /var/www/websocket/*"
          scp -o StrictHostKeyChecking=no -i private_key -r server/* ${USERNAME}@${HOSTNAME}:/var/www/websocket
          ssh -o StrictHostKeyChecking=no -i private_key ${USERNAME}@${HOSTNAME} 'bash -i -c "pm2 restart websocket"'

          
   

